[{"D:\\React Workspace\\TheLitterPicker\\frontend\\src\\index.js":"1","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\reportWebVitals.js":"2","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\App.js":"3","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\components\\new_Navbar.js":"4","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\pages\\login.js":"5","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\pages\\profile.js":"6","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\pages\\signup.js":"7","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\pages\\home.js":"8","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\components\\searchBar.js":"9","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\pages\\Search.js":"10","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\components\\BreederInfoCard.js":"11"},{"size":494,"mtime":1618902342836,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1618902342839,"results":"14","hashOfConfig":"13"},{"size":2104,"mtime":1619486686690,"results":"15","hashOfConfig":"13"},{"size":1919,"mtime":1619486174126,"results":"16","hashOfConfig":"13"},{"size":5105,"mtime":1619486174140,"results":"17","hashOfConfig":"13"},{"size":7901,"mtime":1619486174142,"results":"18","hashOfConfig":"13"},{"size":6536,"mtime":1618902342839,"results":"19","hashOfConfig":"13"},{"size":1112,"mtime":1619486438108,"results":"20","hashOfConfig":"13"},{"size":4462,"mtime":1619486215809,"results":"21","hashOfConfig":"13"},{"size":1507,"mtime":1619486780155,"results":"22","hashOfConfig":"13"},{"size":3672,"mtime":1619486438103,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1sraaxs",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"D:\\React Workspace\\TheLitterPicker\\frontend\\src\\index.js",[],["52","53"],"D:\\React Workspace\\TheLitterPicker\\frontend\\src\\reportWebVitals.js",[],"D:\\React Workspace\\TheLitterPicker\\frontend\\src\\App.js",["54"],"import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\r\nimport './App.css';\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\n\r\n//Components\r\nimport Navbar from './components/new_Navbar';\r\n//Pages\r\n//import home_firebase from './pages/home_firebase';\r\nimport login from './pages/login';\r\nimport signup from './pages/signup';\r\nimport profile from './pages/profile';\r\nimport search from './pages/Search';\r\nimport home from './pages/home';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#757ce8',\r\n      main: '#3f50b5',\r\n      dark: '#002884',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff7961',\r\n      main: '#f44336',\r\n      dark: '#ba000d',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n  typography: {\r\n    uesNextVariants: true\r\n  },\r\n  form: {\r\n    textAlign: 'center'\r\n  },\r\n  image: {\r\n    margin: '20px auto 20px auto'\r\n  },\r\n  pagetitle: {\r\n    margin: '10px auto 10px auto'\r\n  },\r\n  textField: {\r\n    margin: '10px auto 10px auto'\r\n  },\r\n  button: {\r\n    marginTop: 20,\r\n    position: 'relative'\r\n  },\r\n  customError: {\r\n    color: 'red',\r\n    fontSize: '0.8rem',\r\n    marginTop: 10\r\n  },\r\n  progress: {\r\n    position: 'absolute'\r\n  }\r\n});\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <Router>\r\n            <Navbar />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/login\" component={login} />\r\n                <Route exact path=\"/signup\" component={signup} />\r\n                <Route exact path=\"/search\" component={search} />\r\n                <Route exact path=\"/profile\" component={profile} />\r\n                <Route exact path=\"/\" component={home} />\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App\r\n","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\components\\new_Navbar.js",[],"D:\\React Workspace\\TheLitterPicker\\frontend\\src\\pages\\login.js",["55"],"import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/dog_lover.png';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//MUI Stuff\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: 'center'\r\n    },\r\n    image: {\r\n        margin: '20px auto 20px auto'\r\n    },\r\n    pagetitle: {\r\n        margin: '10px auto 10px auto'\r\n    },\r\n    textField: {\r\n        margin: '10px auto 10px auto'\r\n    },\r\n    button: {\r\n        marginTop: 20,\r\n        position: 'relative'\r\n    },\r\n    customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem',\r\n        marginTop: 10\r\n    },\r\n    progress: {\r\n        position: 'absolute'\r\n    }\r\n};\r\n\r\n\r\nexport class login extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            loading: false,\r\n            errors: {}\r\n        };\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        axios\r\n            .post('/login', userData)\r\n            .then(res=>{\r\n                console.log(res.data);\r\n                localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                //Redirect to the home page\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    errors: err.response.data,\r\n                    loading: false\r\n                });\r\n            });\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const { classes } = this.props; \r\n        const { errors, loading } = this.state;\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <a href='https://pngtree.com/so/apparel'></a>\r\n                    <img src={AppIcon} alt=\"dog_lover\" width = \"300\" height = \"300\"/>\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        \r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\" \r\n                            label=\"Email\" \r\n                            className={classes.textField} \r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                        />\r\n                        <TextField id=\"password\"\r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"Password\" \r\n                            className={classes.textField} \r\n                            helperText={errors.password} \r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button \r\n                            type=\"submit\" \r\n                            color=\"primary\" \r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            Login\r\n                            {loading && (\r\n                                <CircularProgress size = {20} className={classes.progress}/>\r\n                            )}\r\n                        </Button>\r\n                        <br />\r\n                        <small> Don't have an account? Sign up <Link to=\"/signup\">here</Link> </small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nlogin.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(login)","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\pages\\profile.js",["56","57","58"],"import React, { Component } from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport AppIcon1 from '../images/phone.png';\r\nimport AppIcon2 from '../images/mail.png';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst styles = {\r\n    pic: {\r\n        textAlign: 'center'\r\n    },\r\n    icon: {\r\n        margin: 'auto'\r\n    },\r\n    prof_button: {\r\n        width: '10'\r\n    },\r\n    update_button: {\r\n        margin: '10 10 10 10'\r\n    }\r\n};\r\n\r\nexport class profile extends Component {\r\n    render() {\r\n        const { classes } = this.props; \r\n        return (\r\n            <Grid container spacing = {1}>\r\n                <Grid container item xs = {12} alignItems = 'center' spacing = {1}>\r\n                    <Grid item sm>\r\n                        <p>Pic one</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <p>Pic two</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <p>Pic three</p>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item xs = {12}>\r\n                    <Grid item xs = {3}> \r\n                        <p>pic</p>\r\n                    </Grid>\r\n                    <Grid item xs = {3}>\r\n                        <p>name</p>\r\n                    </Grid>\r\n                    <Grid item xs = {0.5} className = {classes.icon}> \r\n                        <img src={AppIcon1} alt=\"phone\" width=\"30\" height=\"30\" />\r\n                    </Grid>\r\n                    <Grid item xs = {3}>\r\n                        <p>Phone number</p>\r\n                    </Grid>\r\n                    <Grid item xs = {0.5} className = {classes.icon}>\r\n                        <img src={AppIcon2} alt=\"mail\" width='30' height=\"30\" />\r\n                    </Grid>\r\n                    <Grid item xs={2.5}>\r\n                        <p>chelunh1@uci.edu</p>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container item xs = {12}>\r\n                    <Grid container item xs = {8}>\r\n                        <Grid container item xs = {8}>\r\n                        <Grid item sm>\r\n                            <Button variant=\"outlined\" color=\"primary\">\r\n                                Boys/Sires\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item sm>\r\n                            <Button variant=\"outlined\" color=\"primary\">\r\n                                Girls/Dams\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item sm>\r\n                            <Button variant=\"outlined\" color=\"primary\">\r\n                                Available Puppies\r\n                            </Button>\r\n                        </Grid>\r\n                        </Grid>\r\n                        <Grid container item xs = {8} alignItems=\"center\" className = {classes.overview}>\r\n                            <Grid item sm>\r\n                                <h1>Overview</h1>\r\n                            </Grid>\r\n                            <Grid item sm>\r\n                                <Button variant=\"outlined\" color=\"primary\" className = {classes.update_button}>\r\n                                    update\r\n                                </Button>\r\n                            </Grid>\r\n                            <Grid item sm/>\r\n                        </Grid>\r\n                        <Grid container item xs = {8}>\r\n                            <p>Coming from only the purest and finest of bloodlines, we have carefully selected which dogs we breed. We are intentional ...</p>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container item xs = {4}>\r\n                        <Grid item xs className = {classes.prof_button}>\r\n                            <Button variant=\"contained\" color=\"primary\" fullWidth>\r\n                                Upadate Profile\r\n                            </Button>\r\n                            <br /><br />\r\n                            <Button variant=\"contained\" color=\"primary\" fullWidth>\r\n                                View Applications\r\n                            </Button>\r\n                            <br /><br />\r\n                            <Button variant=\"contained\" color=\"primary\" fullWidth>\r\n                                Customize Application Form\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                <Grid container item xs = {12}>\r\n                    <h1>News and Updates</h1>\r\n                </Grid>\r\n\r\n                <Grid container item xs = {12} spacing = {1} alignItems = 'center'>\r\n                    <Grid item sm>\r\n                        <p>Pic 1</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <p>Pic 2</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <p>Pic 3</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <Button variant=\"outlined\" color=\"primary\">\r\n                            more\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container item xs = {12}>\r\n                    <h1>Sires</h1>\r\n                </Grid>\r\n\r\n                <Grid container item xs = {12} spacing = {1} alignItems = 'center'>\r\n                    <Grid item sm>\r\n                        <p>Pic 1</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <p>Pic 2</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <p>Pic 3</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <Button variant=\"outlined\" color=\"primary\">\r\n                            more\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container item xs = {12}>\r\n                    <h1>Dams</h1>\r\n                </Grid>\r\n\r\n                <Grid container item xs = {12} spacing = {1} alignItems = 'center'>\r\n                    <Grid item sm>\r\n                        <p>Pic 1</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <p>Pic 2</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <p>Pic 3</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <Button variant=\"outlined\" color=\"primary\">\r\n                            more\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container item xs = {12}>\r\n                    <h1>Available Puppies</h1>\r\n                </Grid>\r\n\r\n                <Grid container item xs = {12} spacing = {1} alignItems = 'center'>\r\n                    <Grid item sm>\r\n                        <p>Pic 1</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <p>Pic 2</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <p>Pic 3</p>\r\n                    </Grid>\r\n                    <Grid item sm>\r\n                        <Button variant=\"outlined\" color=\"primary\">\r\n                            more\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nprofile.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(profile)\r\n","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\pages\\signup.js",["59"],"import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/dog_lover.png';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//MUI Stuff\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: 'center'\r\n      },\r\n      image: {\r\n        margin: '20px auto 20px auto'\r\n      },\r\n      pagetitle: {\r\n        margin: '10px auto 10px auto'\r\n      },\r\n      textField: {\r\n        margin: '10px auto 10px auto'\r\n      },\r\n      button: {\r\n        marginTop: 20,\r\n        position: 'relative'\r\n      },\r\n      customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem',\r\n        marginTop: 10\r\n      },\r\n      progress: {\r\n        position: 'absolute'\r\n      }\r\n};\r\n\r\n\r\nexport class signup extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            handle: '',\r\n            loading: false,\r\n            errors: {}\r\n        };\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle\r\n        };\r\n        axios\r\n            .post('/signup', newUserData)\r\n            .then(res=>{\r\n                console.log(res.data);\r\n                localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                //Redirect to the home page\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    errors: err.response.data,\r\n                    loading: false\r\n                });\r\n            });\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const { classes } = this.props; \r\n        const { errors, loading } = this.state;\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <a href='https://pngtree.com/so/apparel'></a>\r\n                    <img src={AppIcon} alt=\"dog_lover\" width = \"300\" height = \"300\"/>\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        \r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\" \r\n                            label=\"Email\" \r\n                            className={classes.textField} \r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"password\"\r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"Password\" \r\n                            className={classes.textField} \r\n                            helperText={errors.password} \r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"confirmPassword\"\r\n                            name=\"confirmPassword\" \r\n                            type=\"password\" \r\n                            label=\"Confirm Password\" \r\n                            className={classes.textField} \r\n                            helperText={errors.confirmPassword} \r\n                            error={errors.confirmPassword ? true : false}\r\n                            value={this.state.confirmPassword} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"handle\"\r\n                            name=\"handle\" \r\n                            type=\"text\" \r\n                            label=\"Handle\" \r\n                            className={classes.textField} \r\n                            helperText={errors.handle} \r\n                            error={errors.handle ? true : false}\r\n                            value={this.state.handle} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button \r\n                            type=\"submit\" \r\n                            color=\"primary\" \r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            Signup\r\n                            {loading && (\r\n                                <CircularProgress size = {20} className={classes.progress}/>\r\n                            )}\r\n                        </Button>\r\n                        <br />\r\n                        <small> Already have an account? Login <Link to=\"/login\">here</Link> </small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nsignup.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(signup);","D:\\React Workspace\\TheLitterPicker\\frontend\\src\\pages\\home.js",[],"D:\\React Workspace\\TheLitterPicker\\frontend\\src\\components\\searchBar.js",[],"D:\\React Workspace\\TheLitterPicker\\frontend\\src\\pages\\Search.js",[],"D:\\React Workspace\\TheLitterPicker\\frontend\\src\\components\\BreederInfoCard.js",["60"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\n\r\nconst styles = {\r\n    root: {\r\n        margin: '0px 0px 0px 0px',\r\n        display: 'flex'\r\n        // textAlign: 'center',\r\n    },\r\n    avatar: {\r\n        margin: '10px 10px 10px 10px',\r\n        display: 'flex',\r\n        width: 240,\r\n        height: 200,\r\n    },\r\n    card_content: {\r\n        display: 'flex',\r\n        // justify: 'center',\r\n    }\r\n};\r\n\r\nexport class BreederInfoCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            readMore: false,\r\n        };\r\n\r\n        this.handleReadMoreClick = this.handleReadMoreClick.bind(this);\r\n    }\r\n\r\n    handleReadMoreClick() {\r\n        this.setState({\r\n            readMore: !this.state.readMore\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <ListItem alignItems=\"flex-start\">\r\n                <Card className={classes.root}>\r\n                    <CardMedia\r\n                        className={classes.avatar}\r\n                        title=\"Breeder Image\"\r\n                        image=\"https://homepages.cae.wisc.edu/~ece533/images/cat.png\"\r\n                    // <Avatar variant='square' alt=\"Remy Sharp\" src=\"https://topics.amcham.com.tw/wp-content/uploads/2016/07/biodiversity6-1.jpg\" />\r\n                    />\r\n                    <div className={classes.card_content}>\r\n                        <CardContent>\r\n                            <Typography component=\"h5\" variant=\"h5\">\r\n                                SnoValley Collies\r\n                            </Typography>\r\n                            \r\n                            <Typography variant=\"body1\" color=\"textSecondary\">\r\n                                Coming from only the purest and finest of bloodlines, we have carefully selected which dogs we breed. We are intentional ...\r\n                            </Typography>\r\n\r\n                            <Typography>\r\n                                <a onClick={this.handleReadMoreClick}>Read more</a>\r\n                            </Typography>\r\n\r\n                            <Collapse in={this.state.readMore} timeout=\"auto\" unmountOnExit>\r\n                                <Typography paragraph=\"true\">\r\n                                    Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\r\n                                    heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\r\n                                    browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\r\n                                    and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\r\n                                    pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\r\n                                    saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\r\n                                </Typography>\r\n                            </Collapse>\r\n                        </CardContent>\r\n\r\n                    </div>\r\n\r\n                </Card>\r\n            </ListItem>\r\n            //   <Divider variant=\"inset\" component=\"li\" />\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(BreederInfoCard);",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":50,"nodeType":"67","messageId":"68","endLine":2,"endColumn":60},{"ruleId":"69","severity":1,"message":"70","line":92,"column":21,"nodeType":"71","endLine":92,"endColumn":62},{"ruleId":"65","severity":1,"message":"72","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":14},{"ruleId":"65","severity":1,"message":"73","line":8,"column":8,"nodeType":"67","messageId":"68","endLine":8,"endColumn":15},{"ruleId":"65","severity":1,"message":"74","line":10,"column":10,"nodeType":"67","messageId":"68","endLine":10,"endColumn":14},{"ruleId":"69","severity":1,"message":"70","line":96,"column":21,"nodeType":"71","endLine":96,"endColumn":62},{"ruleId":"75","severity":1,"message":"76","line":66,"column":33,"nodeType":"71","endLine":66,"endColumn":71},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]