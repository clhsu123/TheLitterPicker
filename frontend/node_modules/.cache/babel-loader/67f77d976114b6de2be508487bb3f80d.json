{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Workspace\\\\TheLitterPicker\\\\frontend\\\\src\\\\pages\\\\login.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport AppIcon from '../images/dog_lover.png';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress'; //MUI Stuff\n\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  form: {\n    textAlign: 'center'\n  },\n  image: {\n    margin: '20px auto 20px auto'\n  },\n  pagetitle: {\n    margin: '10px auto 10px auto'\n  },\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  button: {\n    marginTop: 20,\n    position: 'relative'\n  },\n  customError: {\n    color: 'red',\n    fontSize: '0.8rem',\n    marginTop: 10\n  },\n  progress: {\n    position: 'absolute'\n  }\n};\nexport class login extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      axios.post('/login', userData).then(res => {\n        console.log(res.data);\n        localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\n        this.setState({\n          loading: false\n        }); //Redirect to the home page\n\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          errors: err.response.data,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      loading: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      errors,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true,\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://pngtree.com/so/apparel\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: AppIcon,\n          alt: \"dog_lover\",\n          width: \"300\",\n          height: \"300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 63\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          className: classes.pageTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            name: \"email\",\n            type: \"email\",\n            label: \"Email\",\n            className: classes.textField,\n            helperText: errors.email,\n            error: errors.email ? true : false,\n            value: this.state.email,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            className: classes.textField,\n            helperText: errors.password,\n            error: errors.password ? true : false,\n            value: this.state.password,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), errors.general && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            className: classes.customError,\n            children: [\" \", errors.general, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 37\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            className: classes.button,\n            disabled: loading,\n            children: [\"Login \", loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20,\n              className: classes.progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 30\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\" Don 't have an account? Sign up \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/signup\",\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 53\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 26\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 18\n    }, this);\n  }\n\n}\nlogin.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(login);","map":{"version":3,"sources":["D:/React Workspace/TheLitterPicker/frontend/src/pages/login.js"],"names":["React","Component","withStyles","TextField","PropTypes","AppIcon","Typography","Button","axios","Link","CircularProgress","Grid","styles","form","textAlign","image","margin","pagetitle","textField","button","marginTop","position","customError","color","fontSize","progress","login","constructor","handleSubmit","event","preventDefault","setState","loading","userData","email","state","password","post","then","res","console","log","data","localStorage","setItem","token","props","history","push","catch","err","errors","response","handleChange","target","name","value","render","classes","pageTitle","general","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/dog_lover.png';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//MUI Stuff\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: 'center'\r\n    },\r\n    image: {\r\n        margin: '20px auto 20px auto'\r\n    },\r\n    pagetitle: {\r\n        margin: '10px auto 10px auto'\r\n    },\r\n    textField: {\r\n        margin: '10px auto 10px auto'\r\n    },\r\n    button: {\r\n        marginTop: 20,\r\n        position: 'relative'\r\n    },\r\n    customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem',\r\n        marginTop: 10\r\n    },\r\n    progress: {\r\n        position: 'absolute'\r\n    }\r\n};\r\n\r\n\r\nexport class login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            loading: false,\r\n            errors: {}\r\n        };\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const userData = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        axios\r\n            .post('/login', userData)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                //Redirect to the home page\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    errors: err.response.data,\r\n                    loading: false\r\n                });\r\n            });\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { errors, loading } = this.state;\r\n        return ( <\r\n            Grid container className = { classes.form } >\r\n            <\r\n            Grid item sm / >\r\n            <\r\n            Grid item sm >\r\n            <\r\n            a href = 'https://pngtree.com/so/apparel' > < /a> <\r\n            img src = { AppIcon }\r\n            alt = \"dog_lover\"\r\n            width = \"300\"\r\n            height = \"300\" / >\r\n            <\r\n            Typography variant = \"h2\"\r\n            className = { classes.pageTitle } >\r\n\r\n            <\r\n            /Typography> <\r\n            form noValidate onSubmit = { this.handleSubmit } >\r\n            <\r\n            TextField id = \"email\"\r\n            name = \"email\"\r\n            type = \"email\"\r\n            label = \"Email\"\r\n            className = { classes.textField }\r\n            helperText = { errors.email }\r\n            error = { errors.email ? true : false }\r\n            value = { this.state.email }\r\n            onChange = { this.handleChange }\r\n            fullWidth /\r\n            >\r\n            <\r\n            TextField id = \"password\"\r\n            name = \"password\"\r\n            type = \"password\"\r\n            label = \"Password\"\r\n            className = { classes.textField }\r\n            helperText = { errors.password }\r\n            error = { errors.password ? true : false }\r\n            value = { this.state.password }\r\n            onChange = { this.handleChange }\r\n            fullWidth /\r\n            >\r\n            {\r\n                errors.general && ( <\r\n                    Typography variant = \"body2\"\r\n                    className = { classes.customError } > { errors.general } <\r\n                    /Typography>\r\n                )\r\n            } <\r\n            Button type = \"submit\"\r\n            color = \"primary\"\r\n            className = { classes.button }\r\n            disabled = { loading } >\r\n            Login {\r\n                loading && ( <\r\n                    CircularProgress size = { 20 }\r\n                    className = { classes.progress }\r\n                    />\r\n                )\r\n            } <\r\n            /Button> <\r\n            br / >\r\n            <\r\n            small > Don 't have an account? Sign up <Link to=\"/signup\">here</Link> </small> < /\r\n            form > <\r\n            /Grid> <\r\n            Grid item sm / >\r\n            <\r\n            /Grid>\r\n        )\r\n    }\r\n}\r\n\r\nlogin.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(login)"]},"metadata":{},"sourceType":"module"}