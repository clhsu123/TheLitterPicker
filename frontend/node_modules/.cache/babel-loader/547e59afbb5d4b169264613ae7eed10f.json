{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Workspace\\\\TheLitterPicker\\\\frontend\\\\src\\\\pages\\\\signup.js\";\nimport React, { Component } from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport AppIcon from '../images/dog_lover.png';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress'; //MUI Stuff\n\nimport Grid from '@material-ui/core/Grid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  form: {\n    textAlign: 'center'\n  },\n  image: {\n    margin: '20px auto 20px auto'\n  },\n  pagetitle: {\n    margin: '10px auto 10px auto'\n  },\n  textField: {\n    margin: '10px auto 10px auto'\n  },\n  button: {\n    marginTop: 20,\n    position: 'relative'\n  },\n  customError: {\n    color: 'red',\n    fontSize: '0.8rem',\n    marginTop: 10\n  },\n  progress: {\n    position: 'absolute'\n  }\n};\nexport class signup extends Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const newUserData = {\n        email: this.state.email,\n        password: this.state.password,\n        confirmPassword: this.state.confirmPassword,\n        handle: this.state.handle\n      };\n      axios.post('/signup', newUserData).then(res => {\n        console.log(res.data);\n        localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\n        this.setState({\n          loading: false\n        }); //Redirect to the home page\n\n        this.props.history.push('/');\n      }).catch(err => {\n        this.setState({\n          errors: err.response.data,\n          loading: false\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      confirmPassword: '',\n      handle: '',\n      loading: false,\n      errors: {}\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      errors,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true,\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://pngtree.com/so/apparel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: AppIcon,\n          alt: \"dog_lover\",\n          width: \"300\",\n          height: \"300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          className: classes.pageTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          noValidate: true,\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"email\",\n            name: \"email\",\n            type: \"email\",\n            label: \"Email\",\n            className: classes.textField,\n            helperText: errors.email,\n            error: errors.email ? true : false,\n            value: this.state.email,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"password\",\n            name: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            className: classes.textField,\n            helperText: errors.password,\n            error: errors.password ? true : false,\n            value: this.state.password,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"confirmPassword\",\n            name: \"confirmPassword\",\n            type: \"password\",\n            label: \"Confirm Password\",\n            className: classes.textField,\n            helperText: errors.confirmPassword,\n            error: errors.confirmPassword ? true : false,\n            value: this.state.confirmPassword,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"handle\",\n            name: \"handle\",\n            type: \"text\",\n            label: \"Handle\",\n            className: classes.textField,\n            helperText: errors.handle,\n            error: errors.handle ? true : false,\n            value: this.state.handle,\n            onChange: this.handleChange,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), errors.general && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            className: classes.customError,\n            children: errors.general\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            color: \"primary\",\n            className: classes.button,\n            disabled: loading,\n            children: [\"Signup\", loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20,\n              className: classes.progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\" Already have an account? Login \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 64\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nsignup.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(signup);","map":{"version":3,"sources":["D:/React Workspace/TheLitterPicker/frontend/src/pages/signup.js"],"names":["React","Component","withStyles","TextField","PropTypes","AppIcon","Typography","Button","axios","Link","CircularProgress","Grid","styles","form","textAlign","image","margin","pagetitle","textField","button","marginTop","position","customError","color","fontSize","progress","signup","constructor","handleSubmit","event","preventDefault","setState","loading","newUserData","email","state","password","confirmPassword","handle","post","then","res","console","log","data","localStorage","setItem","token","props","history","push","catch","err","errors","response","handleChange","target","name","value","render","classes","pageTitle","general","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PropTypes from 'prop-types';\r\nimport AppIcon from '../images/dog_lover.png';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//MUI Stuff\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = {\r\n    form: {\r\n        textAlign: 'center'\r\n      },\r\n      image: {\r\n        margin: '20px auto 20px auto'\r\n      },\r\n      pagetitle: {\r\n        margin: '10px auto 10px auto'\r\n      },\r\n      textField: {\r\n        margin: '10px auto 10px auto'\r\n      },\r\n      button: {\r\n        marginTop: 20,\r\n        position: 'relative'\r\n      },\r\n      customError: {\r\n        color: 'red',\r\n        fontSize: '0.8rem',\r\n        marginTop: 10\r\n      },\r\n      progress: {\r\n        position: 'absolute'\r\n      }\r\n};\r\n\r\n\r\nexport class signup extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            handle: '',\r\n            loading: false,\r\n            errors: {}\r\n        };\r\n    };\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle\r\n        };\r\n        axios\r\n            .post('/signup', newUserData)\r\n            .then(res=>{\r\n                console.log(res.data);\r\n                localStorage.setItem('FBIdToken', `Bearer ${res.data.token}`);\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n                //Redirect to the home page\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    errors: err.response.data,\r\n                    loading: false\r\n                });\r\n            });\r\n    };\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        const { classes } = this.props; \r\n        const { errors, loading } = this.state;\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm/>\r\n                <Grid item sm>\r\n                    <a href='https://pngtree.com/so/apparel'></a>\r\n                    <img src={AppIcon} alt=\"dog_lover\" width = \"300\" height = \"300\"/>\r\n                    <Typography variant=\"h2\" className={classes.pageTitle}>\r\n                        \r\n                    </Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField \r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\" \r\n                            label=\"Email\" \r\n                            className={classes.textField} \r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"password\"\r\n                            name=\"password\" \r\n                            type=\"password\" \r\n                            label=\"Password\" \r\n                            className={classes.textField} \r\n                            helperText={errors.password} \r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"confirmPassword\"\r\n                            name=\"confirmPassword\" \r\n                            type=\"password\" \r\n                            label=\"Confirm Password\" \r\n                            className={classes.textField} \r\n                            helperText={errors.confirmPassword} \r\n                            error={errors.confirmPassword ? true : false}\r\n                            value={this.state.confirmPassword} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                        />\r\n                        <TextField \r\n                            id=\"handle\"\r\n                            name=\"handle\" \r\n                            type=\"text\" \r\n                            label=\"Handle\" \r\n                            className={classes.textField} \r\n                            helperText={errors.handle} \r\n                            error={errors.handle ? true : false}\r\n                            value={this.state.handle} \r\n                            onChange={this.handleChange} \r\n                            fullWidth\r\n                        />\r\n                        {errors.general && (\r\n                            <Typography variant=\"body2\" className={classes.customError}>\r\n                                {errors.general}\r\n                            </Typography>\r\n                        )}\r\n                        <Button \r\n                            type=\"submit\" \r\n                            color=\"primary\" \r\n                            className={classes.button}\r\n                            disabled={loading}\r\n                        >\r\n                            Signup\r\n                            {loading && (\r\n                                <CircularProgress size = {20} className={classes.progress}/>\r\n                            )}\r\n                        </Button>\r\n                        <br />\r\n                        <small> Already have an account? Login <Link to=\"/login\">here</Link> </small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm/>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nsignup.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(signup);"]},"metadata":{},"sourceType":"module"}